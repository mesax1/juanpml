---
import { type CollectionEntry } from 'astro:content';

// Define a more specific type for the project prop based on your schema
// This assumes your schema definition is accessible or correctly inferred by Astro
export interface Props {
  project: CollectionEntry<'projects'>; 
}

const { project } = Astro.props;
const { data, id } = project;
const { title, clientOrCompany, displayYear, shortDescription, technologies, imageUrls } = data;

const primaryImageUrl = imageUrls && imageUrls.length > 0 ? imageUrls[0] : undefined;
const projectLink = `/projects/${id}`;
---

<a href={projectLink} class="group block h-full">
  <article class="h-full bg-bgColor border border-special-light/50 rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 hover:border-accent-one/30 flex flex-col">
    <!-- Project Image -->
    {primaryImageUrl ? (
      <div class="relative h-56 lg:h-64 xl:h-72 overflow-hidden flex-shrink-0 bg-white dark:bg-gray-800 flex items-center justify-center">
        <img 
          src={primaryImageUrl} 
          alt={title}
          class="w-full h-full object-contain group-hover:scale-110 transition-transform duration-500 p-4"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      </div>
    ) : (
      <div class="h-56 lg:h-64 xl:h-72 bg-gradient-to-br from-accent-one/20 to-accent-two/20 flex items-center justify-center flex-shrink-0">
        <div class="text-center">
          <div class="w-20 h-20 lg:w-24 lg:h-24 mx-auto mb-4 bg-gradient-to-r from-accent-one to-accent-two rounded-full flex items-center justify-center">
            <svg class="w-10 h-10 lg:w-12 lg:h-12 text-bgColor" fill="currentColor" viewBox="0 0 20 20">
              <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
            </svg>
          </div>
          <p class="text-base lg:text-lg text-accent-base font-medium">AI Project</p>
        </div>
      </div>
    )}

    <!-- Content -->
    <div class="p-6 lg:p-8 flex flex-col flex-grow">
      <!-- Header -->
      <div class="mb-4 lg:mb-6">
        <h3 class="text-xl lg:text-2xl font-bold text-accent-base mb-3 group-hover:text-accent-one transition-colors line-clamp-2">
          {title}
        </h3>
        <p class="text-sm lg:text-base text-lighter">
          <span class="font-medium">Year:</span> {displayYear}
        </p>
      </div>

      <!-- Description -->
      <p class="text-base lg:text-lg text-textColor leading-relaxed mb-4 lg:mb-6 line-clamp-5">
        {shortDescription}
      </p>

      <!-- Technologies -->
      {technologies && technologies.length > 0 && (
        <div class="mb-4 lg:mb-6">
          <p class="text-sm lg:text-base font-medium text-light mb-3">Technologies:</p>
          <div class="flex flex-wrap gap-2 lg:gap-3">
            {technologies.slice(0, 3).map((tech: string) => (
              <span class="px-3 py-1.5 lg:px-4 lg:py-2 bg-gradient-to-r from-accent-one/10 to-accent-two/10 text-accent-base text-xs lg:text-sm font-medium rounded-full border border-accent-one/20 group-hover:border-accent-one/40 transition-colors">
                {tech}
              </span>
            ))}
            {technologies.length > 3 && (
              <span class="px-3 py-1.5 lg:px-4 lg:py-2 bg-accent-one/20 text-accent-one text-xs lg:text-sm font-medium rounded-full">
                +{technologies.length - 3} more
              </span>
            )}
          </div>
        </div>
      )}

      <!-- View Project Indicator -->
      <div class="mt-auto pt-4 lg:pt-6 border-t border-special-light/50">
        <div class="flex items-center justify-between">
          <span class="text-sm lg:text-base font-medium text-accent-base group-hover:text-accent-one transition-colors">
            View Project Details
          </span>
          <svg class="w-5 h-5 lg:w-6 lg:h-6 text-accent-base group-hover:text-accent-one group-hover:translate-x-1 transition-all" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
          </svg>
        </div>
      </div>
    </div>
  </article>
</a>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 